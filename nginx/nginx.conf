# /etc/nginx/nginx.conf
daemon off;
user nginx;
worker_processes auto;
pcre_jit on;

# Configures default error logger.
error_log /var/log/nginx/error.log warn;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;


events {
	# The maximum number of simultaneous connections that can be opened by
	# a worker process.
	worker_connections 1024;
}

http {
	# Includes mapping of file name extensions to MIME types of responses
	# and defines the default type.
	gzip on;
	gzip_disable "msie6";
	types_hash_max_size 2048;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# Name servers used to resolve names of upstream servers into addresses.
	# It's also needed when using tcpsocket and udpsocket in Lua modules.
	#resolver 208.67.222.222 208.67.220.220;

	# Don't tell nginx version to clients.
	server_tokens off;

	# Specifies the maximum accepted body size of a client request, as
	# indicated by the request header Content-Length. If the stated content
	# length is greater than this size, then the client receives the HTTP
	# error code 413. Set to 0 to disable.
	client_max_body_size 1m;

	# Timeout for keep-alive connections. Server will close connections after
	# this time.
	keepalive_timeout 65;

	# Sendfile copies data between one FD and other from within the kernel,
	# which is more efficient than read() + write().
	sendfile on;

	# Don't buffer data-sends (disable Nagle algorithm).
	# Good for sending frequent small bursts of data in real time.
	tcp_nodelay on;

	# Causes nginx to attempt to send its HTTP response head in one packet,
	# instead of using partial frames.
	#tcp_nopush on;


	# Path of the file with Diffie-Hellman parameters for EDH ciphers.
	#ssl_dhparam /etc/ssl/nginx/dh2048.pem;

	# Specifies that our cipher suits should be preferred over client ciphers.
	ssl_prefer_server_ciphers on;

	# Enables a shared SSL cache with size that can hold around 8000 sessions.
	ssl_session_cache shared:SSL:2m;


	# Enable gzipping of responses.
	#gzip on;

	# Set the Vary HTTP header as defined in the RFC 2616.
	gzip_vary on;

	# Enable checking the existence of precompressed files.
	#gzip_static on;


	# Specifies the main log format.
	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
			'$status $body_bytes_sent "$http_referer" '
			'"$http_user_agent" "$http_x_forwarded_for"';

	# Sets the path, format, and configuration for a buffered log write.
	access_log /var/log/nginx/access.log main;


	# Includes virtual hosts configs.
	server {

	listen 80 default_server;
	listen [::]:80 default_server;

	# Everything is a 404
	
	location / {
	      root  <path-to-nginx-rtmp-module>/test/rtmp-publisher;
	}

	location /live {
	alias /var/tmp/hls;
	types {
	  application/vnd.apple.mpegurl m3u8;
	  video/mp2t ts;
	}
	add_header Cache-Control no-cache;
	add_header Access-Control-Allow-Origin *;
	expires -1;
	}

	location /on_publish {
	return 201;
	}

	# You may need this to prevent return 404 recursion.
	location = /404.html {
		internal;
	}
	location /crossdomain.xml {
	 default_type text/xml;
	 return 200 '<?xml version="1.0"?>
	 <!DOCTYPE cross-domain-policy SYSTEM "http://www.adobe.com/xml/dtds/cross-domain-policy.dtd">
	 <cross-domain-policy>
	 <site-control permitted-cross-domain-policies="all"/>				 <allow-access-from domain="*" secure="false"/>					 <allow-http-request-headers-from domain="*" headers="*" secure="false"/>					                
	 </cross-domain-policy>';			
	 expires 24h;
	}
    }
}
rtmp_auto_push on;
rtmp {
     server {
       listen 1935;
       chunk_size 131072;
       max_message 12M;
       buflen 2s;
       ping 30s;

  application live {
   
   live on;
   record off;
   on_publish http://localhost:80/on_publish;
   exec_push ffmpeg -i rtmp://localhost:1935/live/$name
    -c:a aac -b:a 128k -c:v libx264 -b:v 2500k -f flv -g 60 -r 60 -filter:v scale=1920:-1 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_1080p
    -c:a aac -b:a 128k -c:v libx264 -b:v 2500k -f flv -g 60 -r 60 -filter:v scale=1280:-1 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_720p
    -c:a aac -b:a 128k -c:v libx264 -b:v 1000k -f flv -g 30 -r 30 -filter:v scale=854:-1 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_480p;
    
    recorder preview {
    record keyframes;
    record_max_frames 4;
    record_interval 30s;

    exec_record_done ffmpeg -i rtmp://localhost:1935/live/$name
    -vcodec png -vframes 1 -an -f rawvideo -s 320x180 -ss 00:00:01 -y /var/tmp/hls/$name.png;
    }
  }
   
   application hls {
        live on;
	    hls on;
		record off;
		hls_fragment_naming system;
        hls_fragment 2s;
		hls_playlist_length 6s;
		hls_path /var/tmp/hls;
		hls_nested on;
		hls_cleanup on;

   hls_variant _1080p BANDWIDTH=2628000,RESOLUTION=1920x1080; 
   hls_variant _720p BANDWIDTH=2628000,RESOLUTION=1280x720;
   hls_variant _480p BANDWIDTH=1128000,RESOLUTION=854x480;
				}
   }
}
